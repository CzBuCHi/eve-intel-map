//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eve_intel_map.EveIntel {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EveIntelCharacterInfo", Namespace="http://schemas.datacontract.org/2004/07/eve_intel_server.Model")]
    [System.SerializableAttribute()]
    public partial class EveIntelCharacterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eve_intel_map.EveIntel.EveIntelCorporationInfo CorpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eve_intel_map.EveIntel.EveIntelCorporationInfo Corp {
            get {
                return this.CorpField;
            }
            set {
                if ((object.ReferenceEquals(this.CorpField, value) != true)) {
                    this.CorpField = value;
                    this.RaisePropertyChanged("Corp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EveId {
            get {
                return this.EveIdField;
            }
            set {
                if ((this.EveIdField.Equals(value) != true)) {
                    this.EveIdField = value;
                    this.RaisePropertyChanged("EveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Kos {
            get {
                return this.KosField;
            }
            set {
                if ((this.KosField.Equals(value) != true)) {
                    this.KosField = value;
                    this.RaisePropertyChanged("Kos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EveIntelCorporationInfo", Namespace="http://schemas.datacontract.org/2004/07/eve_intel_server.Model")]
    [System.SerializableAttribute()]
    public partial class EveIntelCorporationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eve_intel_map.EveIntel.EveIntelAllianceInfo AllianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NpcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eve_intel_map.EveIntel.EveIntelAllianceInfo Alliance {
            get {
                return this.AllianceField;
            }
            set {
                if ((object.ReferenceEquals(this.AllianceField, value) != true)) {
                    this.AllianceField = value;
                    this.RaisePropertyChanged("Alliance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EveId {
            get {
                return this.EveIdField;
            }
            set {
                if ((this.EveIdField.Equals(value) != true)) {
                    this.EveIdField = value;
                    this.RaisePropertyChanged("EveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Kos {
            get {
                return this.KosField;
            }
            set {
                if ((this.KosField.Equals(value) != true)) {
                    this.KosField = value;
                    this.RaisePropertyChanged("Kos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Npc {
            get {
                return this.NpcField;
            }
            set {
                if ((this.NpcField.Equals(value) != true)) {
                    this.NpcField = value;
                    this.RaisePropertyChanged("Npc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EveIntelAllianceInfo", Namespace="http://schemas.datacontract.org/2004/07/eve_intel_server.Model")]
    [System.SerializableAttribute()]
    public partial class EveIntelAllianceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EveId {
            get {
                return this.EveIdField;
            }
            set {
                if ((this.EveIdField.Equals(value) != true)) {
                    this.EveIdField = value;
                    this.RaisePropertyChanged("EveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Kos {
            get {
                return this.KosField;
            }
            set {
                if ((this.KosField.Equals(value) != true)) {
                    this.KosField = value;
                    this.RaisePropertyChanged("Kos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EveIntel.IEveIntel", CallbackContract=typeof(eve_intel_map.EveIntel.IEveIntelCallback))]
    public interface IEveIntel {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEveIntel/Connect", ReplyAction="http://tempuri.org/IEveIntel/ConnectResponse")]
        System.Nullable<System.Guid> Connect(long keyId, string vCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEveIntel/Connect", ReplyAction="http://tempuri.org/IEveIntel/ConnectResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> ConnectAsync(long keyId, string vCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEveIntel/Disconnect")]
        void Disconnect(System.Guid clientId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEveIntel/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync(System.Guid clientId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEveIntel/UpdateLocal")]
        void UpdateLocal(System.Guid clientId, long currentSystem, System.Collections.Generic.List<string> characterNames);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEveIntel/UpdateLocal")]
        System.Threading.Tasks.Task UpdateLocalAsync(System.Guid clientId, long currentSystem, System.Collections.Generic.List<string> characterNames);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEveIntelCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEveIntel/ClientCountUpdate")]
        void ClientCountUpdate(int clientCount);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEveIntel/SecondConnection")]
        void SecondConnection();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEveIntel/ClientLocalUpdate")]
        void ClientLocalUpdate(long solarsystemId, System.Collections.Generic.List<eve_intel_map.EveIntel.EveIntelCharacterInfo> characters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEveIntelChannel : eve_intel_map.EveIntel.IEveIntel, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EveIntelClient : System.ServiceModel.DuplexClientBase<eve_intel_map.EveIntel.IEveIntel>, eve_intel_map.EveIntel.IEveIntel {
        
        public EveIntelClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public EveIntelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public EveIntelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EveIntelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EveIntelClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.Nullable<System.Guid> Connect(long keyId, string vCode) {
            return base.Channel.Connect(keyId, vCode);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> ConnectAsync(long keyId, string vCode) {
            return base.Channel.ConnectAsync(keyId, vCode);
        }
        
        public void Disconnect(System.Guid clientId) {
            base.Channel.Disconnect(clientId);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(System.Guid clientId) {
            return base.Channel.DisconnectAsync(clientId);
        }
        
        public void UpdateLocal(System.Guid clientId, long currentSystem, System.Collections.Generic.List<string> characterNames) {
            base.Channel.UpdateLocal(clientId, currentSystem, characterNames);
        }
        
        public System.Threading.Tasks.Task UpdateLocalAsync(System.Guid clientId, long currentSystem, System.Collections.Generic.List<string> characterNames) {
            return base.Channel.UpdateLocalAsync(clientId, currentSystem, characterNames);
        }
    }
}
